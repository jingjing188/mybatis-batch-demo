<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.company.project.modules.mybatisBatch.mapper.UserInfMapper">
    <resultMap id="BaseResultMap" type="com.company.project.modules.mybatisBatch.model.UserInf">
        <!--
        @mbggenerated
        -->
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="uname" jdbcType="VARCHAR" property="uname" />
        <result column="passwd" jdbcType="VARCHAR" property="passwd" />
        <result column="gentle" jdbcType="VARCHAR" property="gentle" />
        <result column="email" jdbcType="VARCHAR" property="email" />
        <result column="city" jdbcType="VARCHAR" property="city" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <!--
        @mbggenerated
        -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!--
        @mbggenerated
        -->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--
        @mbggenerated
        -->
        id, uname, passwd, gentle, email, city
    </sql>
    <select id="selectByExample" parameterType="com.company.project.modules.mybatisBatch.model.UserInfExample" resultMap="BaseResultMap">
        <!--
        @mbggenerated
        -->
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List" />
        from user_inf
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--
        @mbggenerated
        -->
        select 
        <include refid="Base_Column_List" />
        from user_inf
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--
        @mbggenerated
        -->
        delete from user_inf
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.company.project.modules.mybatisBatch.model.UserInfExample">
        <!--
        @mbggenerated
        -->
        delete from user_inf
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="com.company.project.modules.mybatisBatch.model.UserInf" useGeneratedKeys="true" keyProperty="id">
        <!--
        @mbggenerated
        -->
        <!--<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>-->
        insert into user_inf (id, uname, passwd, gentle, email, city)
        values (#{id,jdbcType=INTEGER}, #{uname,jdbcType=VARCHAR}, #{passwd,jdbcType=VARCHAR}, 
            #{gentle,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}
            )
    </insert>
    <insert id="insertWithXMl" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id">
        <!--
        @mbggenerated
        -->
        <!--<selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>-->
        insert into user_inf (id, uname, passwd,
        gentle, email, city
        )
        values
        <foreach collection="list" item="user" open="(" separator="," close=")">
            #{id,jdbcType=INTEGER}, #{uname,jdbcType=VARCHAR}, #{passwd,jdbcType=VARCHAR},
            #{gentle,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}
        </foreach>
    </insert>
    <insert id="insertSelective" parameterType="com.company.project.modules.mybatisBatch.model.UserInf">
        <!--
        @mbggenerated
        -->
        <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into user_inf
        <trim prefix="(" suffix=")" suffixOverrides=",">
            id,
            <if test="uname != null">
                uname,
            </if>
            <if test="passwd != null">
                passwd,
            </if>
            <if test="gentle != null">
                gentle,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="city != null">
                city,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            #{id,jdbcType=INTEGER},
            <if test="uname != null">
                #{uname,jdbcType=VARCHAR},
            </if>
            <if test="passwd != null">
                #{passwd,jdbcType=VARCHAR},
            </if>
            <if test="gentle != null">
                #{gentle,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="city != null">
                #{city,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.company.project.modules.mybatisBatch.model.UserInfExample" resultType="java.lang.Integer">
        <!--
        @mbggenerated
        -->
        select count(*) from user_inf
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        <!--
        @mbggenerated
        -->
        update user_inf
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.uname != null">
                uname = #{record.uname,jdbcType=VARCHAR},
            </if>
            <if test="record.passwd != null">
                passwd = #{record.passwd,jdbcType=VARCHAR},
            </if>
            <if test="record.gentle != null">
                gentle = #{record.gentle,jdbcType=VARCHAR},
            </if>
            <if test="record.email != null">
                email = #{record.email,jdbcType=VARCHAR},
            </if>
            <if test="record.city != null">
                city = #{record.city,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!--
        @mbggenerated
        -->
        update user_inf
        set id = #{record.id,jdbcType=INTEGER},
            uname = #{record.uname,jdbcType=VARCHAR},
            passwd = #{record.passwd,jdbcType=VARCHAR},
            gentle = #{record.gentle,jdbcType=VARCHAR},
            email = #{record.email,jdbcType=VARCHAR},
            city = #{record.city,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.company.project.modules.mybatisBatch.model.UserInf">
        <!--
        @mbggenerated
        -->
        update user_inf
        <set>
            <if test="uname != null">
                uname = #{uname,jdbcType=VARCHAR},
            </if>
            <if test="passwd != null">
                passwd = #{passwd,jdbcType=VARCHAR},
            </if>
            <if test="gentle != null">
                gentle = #{gentle,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="city != null">
                city = #{city,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.company.project.modules.mybatisBatch.model.UserInf">
        <!--
        @mbggenerated
        -->
        update user_inf
        set uname = #{uname,jdbcType=VARCHAR},
            passwd = #{passwd,jdbcType=VARCHAR},
            gentle = #{gentle,jdbcType=VARCHAR},
            email = #{email,jdbcType=VARCHAR},
            city = #{city,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>